{
  "title": "Policy as Code with Kubewarden: Implement and Enforce Kubernetes Policies",
  "description": "",
  "details": {
    "intro": {
      "text": "intro.md"
    },
    "steps": [
      {
        "title": "Environment setup",
        "text": "step1/text.md",
        "verify": "step1/verify.sh"
      },
      {
        "title": "Setup Kubernetes Cluster",
        "text": "step2/text.md",
        "verify": "step2/verify.sh"
      },
      {
        "title": "Policy1",
        "text": "step3.md"
      },
      {
        "title": "Policy2",
        "text": "step4.md"
      }
    ],
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "policy1.yaml",
          "target": "policy1"
        },
        {
          "file": "metadata1.yaml",
          "target": "policy1"
        },
        {
          "file": "deny-privileged-policy.rego",
          "target": "policy1"
        },
        {
          "file": "privileged-pod.yaml",
          "target": "policy1"
        },
        {
          "file": "no-privileged-pod.yaml",
          "target": "policy1"
        },
        {
          "file": "policy2.yaml",
          "target": "policy2"
        },
        {
          "file": "metadata2.yaml",
          "target": "policy2"
        },
        {
          "file": "deny-protected-policy.rego",
          "target": "policy2"
        },
        {
          "file": "protected-pod.yaml",
          "target": "policy2"
        },
        {
          "file": "policy-server.yaml",
          "target": "common"
        },
        {
          "file": "request.rego",
          "target": "common"
        },
        {
          "file": "policyexample.rego",
          "target": "policies"
        },
        {
          "file": "default-ns.json",
          "target": "policies"
        },
        {
          "file": "other-ns.json",
          "target": "policies"
        },
        {
          "file": "cockroachdb-cluster.yaml",
          "target": "policies"
        }
      ]
    }
  },
  "backend": {
    "imageid": "ubuntu"
  }
}
